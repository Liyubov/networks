#!/usr/bin/env python
# coding: utf-8

# # Analysis of trajectories
# 
# @Liubov Tupikina 
# 
# 
# Here we analyse trajectories:
# 1. we start with analysis of random trajectories (generated by stochastic system of equations)
# 2. we continue with analysis of real trajectories (from observations)
# 
# As an input we take the data in dataframe format:
# dataframe(x(t), y(t)). Here we focus on two-dimensional trajectory, although analysis can be done for N-dimensional space.
# 
# 
# ### Analysis of real trajectories
# 
# In this project we are analyzing real trajectories, e.g. from the project, which we were part of http://inadilic.fr/data/ (credits to D.Grebenkov)
# 
# 
# ### Load trajectories from real data
# 
# We first load real trajectories. 
# We start with sample data from Brownian motion. 
# Loading big csv files may take time.
# 
# 1. D. S. Grebenkov, Dataset created for the project INADILIC. A Brownian motion trajectory is generated as a cumulative sum of independent Gaussian variables with mean 0 and  variance 2D, with the diffusion coefficient D set to 1. The full set contains M = 1000 one-dimensional trajectories of N = 10000 points (steps). 
# 2. Experimental Data from (Golding & Cox) mRNA in E. coli cell with N=140-1600, M=27, d=2
# 	
# 

# In[7]:


import plotly.plotly as py
import plotly.graph_objs as go
import pandas as pd
import csv
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import pyplot as plt



# load data, it is very heavy 
print('loading the data')
file_name = "C:/Users/lyubo/Documents/DATA_networks/trajectories_data/BM_sample.txt"
traj = np.loadtxt(file_name) #, delimiter = ',')
print('data loaded in format ', type(traj),np.shape(traj))

shape = np.shape(traj)
size = shape[0]

# we can now save trajectory as dataframe for convenience 
# for 1D trajectory
df = pd.DataFrame({'Column1': traj[:]})

# for ND trajectory
#df =  pd.DataFrame({'Column1': traj[:,0], 'Column2': traj[:, 1]}


# we can also load trajectories from csv file
#traj = pd.read_csv('C:/Users/lyubo/Documents/DATA_networks/mobilitydata/bikes_sharing_data_technologiestiftung_berlin/pseudonomysed_raw.csv')
#traj.head()


# ## Displaying trajectories

# In[8]:


import plotly.plotly as py
import plotly.graph_objs as go
import pandas as pd
import csv
import numpy as np

fig, ax = plt.subplots(1, 1, figsize=(8, 8))
timeaxis =  np.linspace(start = 0, stop = size, num = size)
shape = np.shape(traj)
size = shape[0]
ax.scatter(timeaxis, traj, c=range(size), linewidths=0,marker='o', s=3, cmap=plt.cm.jet,) # We draw our points with a gradient of colors.
ax.axis('equal')
ax.set_axis_off()
#fig.suptitle('Distribution of steps for RW a='+str(a), fontsize=16)
fig.suptitle('Trajectory from real data', fontsize=16)


# In[ ]:




